services:
  server:
    container_name: home-paint-server
    entrypoint: dockerize -wait tcp://db:5432 -timeout 40s ./.docker/entrypoint.sh
    build: .
    restart: always
    depends_on:
      - db
    ports:
      - "3001:3000"
    volumes:
      - .:/home/app/server

  db:
    build: .docker/postgres
    container_name: home-paint-api-db
    tty: true
    restart: always
    volumes:
      - ./.docker/dbdata:/var/lib/postgresql/data
      - ./.docker/postgres/docker-postgresql:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -U postgresuser -d dbtest"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_MULTIPLE_DATABASES=postgres:dbpaint,postgres:dbtest
      - POSTGRES_PASSWORD=root

  pgadmin:
    image: dpage/pgadmin4
    container_name: home-paint-api-pgadmin
    tty: true
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@user.com
      - PGADMIN_DEFAULT_PASSWORD=123456
    ports:
      - 9002:80

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021

# External systems

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.2
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'

  jenkins:
    image: jenkins/jenkins:lts
    volumes:
       - jenkins_data:/var/jenkins_home
    ports:
      - '8080:8080'
      - '50000:50000'

  connect:
    build: ./elasticsearch-postgresql/debezium-jdbc-es
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      - postgres
      - elasticsearch
      - kibana
      - control-center
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets

volumes:
  jenkins_data:
